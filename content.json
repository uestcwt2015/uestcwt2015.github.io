{"pages":[{"title":"404","text":"","path":"404/index.html","date":"02-25","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"02-25","excerpt":""}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2018/07/08/hello-world/","date":"07-08","excerpt":""},{"title":"JavaScript Debounce & Throttle","text":"探究一下函数节流和函数去抖的原理及实现 函数去抖（Debounce）对于那些频繁触发的事件，我们期望在某段时间內只触发一次，而不是每次触发都要执行回调 简单的说就是我们忽略掉多次触发的相同事件，只关注某一次触发 自己的实现：12345678910111213function debounce(fn, delay) &#123; let timer = null; return function (...args) &#123; let context = this; clearTimeout(timer); timer = setTimeout(() =&gt; &#123; fn.apply(context, args); &#125;, delay); &#125;&#125; 原理： 通过闭包存储timer，当连续触发事件时，上一次的定时器还未执行回调就会被下一次触发给清掉，所以只会最后一次触发才会执行回调 demo","path":"2018/03/18/JavaScript-Debounce-Throttle/","date":"03-18","excerpt":"探究一下函数节流和函数去抖的原理及实现"}]}